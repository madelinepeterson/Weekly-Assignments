# Genomics Weekly Assignment 8
# performing a differential analysis

install.packages("tidyverse")
install.packages("readr")

if (!requireNamespace("BiocManager", quietly = TRUE)) install.packages("BiocManager") 
BiocManager::install("DESeq2")

library(readr)
library(tidyverse)
library(DESeq2)

counts<- read.csv("WA_counts.csv")
metadata<- read.csv("WA8_Metadata.csv")

head(counts)
head(metadata)

class(counts)
#data.frame
class(metadata)

#preparing data for DEseq only needs to be done if the data isn't already in data.frame format, but they both are
names(counts)[-1]

names(counts)[-1]==metadata$i..id
all(names(counts)[-1]==metadata$id)
#this line shows that the names do match by giving TRUE

#this creates the needed "object" format to then run the analysis
dds.data <- DESeqDataSetFromMatrix(countData=counts, 
                                   colData=metadata, 
                                   design=~dex, 
                                   tidy=TRUE)

#running DEseq
dds <- DESeq(dds.data)
#to look at the results of the analysis:
res <- results(dds, tidy=TRUE)
res2 <- tbl_df(res)

#need to load dplyr package to access tbl_rf
install.packages("dplyr")
library(dplyr)
#rerun
res2 <- tbl_df(res)

res3 <- arrange(res2, padj)

#Filtering the data by significance (p value) and fold change (min of 2 fold change)
#two coding lines-- one for the neg fold changes and one for pos fold change

res4 <- filter(res3, padj<=0.05 & log2FoldChange>=2) #1489 sig genes
res5 <- filter(res3, padj<=0.05 & log2FoldChange<=-2) #915 sig genes

#Not counting fold change
sig.res <- filter(res3, padj<=0.05) #8905

#At this point in the tutorial there is a code for joining the annotation information with other gene information, but we don't have an annotation file

#########################################################################
#Weekly Assignment 9 begins

#Adding a column that labels significant vs non-significant
res=mutate(res,significance=ifelse(padj<0.05,"Significant","Non-significant"))
#adding a column that labels the pos and negative logfold values to indicate mutant or control expresion differences
res=mutate(res,origin=ifelse(log2FoldChange<0,"WT","Control"))

# 1) A volcano plot showing differentially expressed genes - color the Control points blue and the Mutant points Red.
ggplot(res) +
  geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=(WT=blue, Control=red)) +
  ggtitle("Mov10 overexpression") +
  xlab("log2 fold change") + 
  ylab("-log10 adjusted p-value") +
  #scale_y_continuous(limits = c(0,50)) +
  theme(legend.position = "none",
        plot.title = element_text(size = rel(1.5), hjust = 0.5),
        axis.title = element_text(size = rel(1.25)))  +
  theme_bw()
#didn't work/plot

#online volcano plot making instructions 
(https://www.gettinggeneticsdone.com/2014/05/r-volcano-plots-to-visualize-rnaseq-microarray.html)

# 1) A volcano plot showing differentially expressed genes - color the Control points blue and the Mutant points Red.

ggplot(res) +
  geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=origin)) +
  ggtitle("Mov10 overexpression") +
  xlab("log2 fold change") + 
  ylab("-log10 adjusted p-value")

# 2) A box plot of the expression of the gene with the highest positive fold change

plotCounts(dds, gene="Solyc11g028040.1.1", intgroup="dex", returnData=TRUE) %>%
  ggplot(aes(dex,count))+
  geom_boxplot(aes(fill=dex))+
  scale_y_log10() + 
  ggtitle("Solyc11g028040.1.1") 

# 3)A box plot of the expression of the gene with the highest negative fold change

plotCounts(dds, gene="Solyc09g089500.2.1", intgroup="dex", returnData=TRUE) %>%
  ggplot(aes(dex,count))+
  geom_boxplot(aes(fill=dex))+
  scale_y_log10() + 
  ggtitle("Solyc09g089500.2.1") 

# 4) An MA. MA plots are log10 of the mean expression (baseMean) of a gene on the x-axis and log2FoldChange on the y-axis.

ggplot(res) +
  geom_point(aes(y=log2FoldChange, x=log10(baseMean))) +
  ggtitle("MA plot") +
  ylab("log2FoldChnage") +
  xlab("log10(basemean)")















